version: 2

defaults: &setup
  working_directory: ~/symfony-circleci
  docker:
    - image: circleci/php:7.0-fpm-browsers

defaults: &tests
  working_directory: ~/symfony-circleci
  docker:
    - image: circleci/php:7.0-fpm-browsers
      environment:
        DB_NAME: symfonydemo
        DB_USER: root
        DB_PASS: root
        DB_PORT: 3306
        DB_HOST: symfonydemo
    - image: mysql:5.7
      name: symfonydemo
      environment:
        MYSQL_ROOT_PASSWORD: root
        MYSQL_DATABASE: symfonydemo

jobs:

  setup:
    <<: *setup
    parallelism: 1
    steps:
      - checkout

#      - run:
#          name: Install docker-compose
#          command: |
#            curl -L https://github.com/docker/compose/releases/download/1.16.1/docker-compose-`uname -s`-`uname -m` > ~/docker-compose
#            chmod +x ~/docker-compose
#            sudo mv ~/docker-compose /usr/local/bin/docker-compose

      - run:
          command: sudo composer self-update

      # Download and cache dependencies
      - restore_cache:
          keys:
            - v1-vendors-{{ checksum "composer.json" }}
            - v1-vendors-

      - run: composer install -n --prefer-dist

      - save_cache:
          key: composer-v1-{{ checksum "composer.json" }}
          paths:
            - ./vendor

      - run:
          name: Copy parameters.yml
          command: cp .circleci/parameters.yml.dist app/config/parameters.yml

      # Persist project data
      - persist_to_workspace:
          root: ~/
          paths:
            - symfony-circleci
            - .ssh

  tests:
    <<: *tests
    parallelism: 1
    steps:
      - attach_workspace:
          at: ~/

      - run:
          name: Install PHP extensions
          command: sudo docker-php-ext-install pdo_mysql

      - run:
          name: Install Mysql
          command: |
            sudo apt-get update
            sudo apt-get install -y mysql-client

      - run:
          name: install dockerize
          command: wget https://github.com/jwilder/dockerize/releases/download/$DOCKERIZE_VERSION/dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz && tar -C /usr/local/bin -xzvf dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz && rm dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz
          environment:
            DOCKERIZE_VERSION: v0.5.0

      - run:
          name: Wait for db
          command: dockerize -wait tcp://symfonydemo:3306 -timeout 1m

      - run:
          name: Check data app/config
          command: |
            ls -al app/config
            printenv
            cat app/config/parameters.yml

      - run:
          name: Run migrations with no interactions
          command: bin/console -n doctrine:migrations:migrate

      - run:
          name: Run tests
          command: vendor/phpunit/phpunit/phpunit

workflows:
  version: 2
  build-and-deploy:
    jobs:
      - setup
      - tests:
          requires:
            - setup
