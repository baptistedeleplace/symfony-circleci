version: 2

defaults: &setup
  working_directory: ~/symfony-circleci
  docker:
    - image: vouchedfor/symfony-base

defaults: &tests
  environment:
    DB_NAME: symfonydemo
    DB_USER: root
    DB_PASS: root
    DB_PORT: 3306
    DB_HOST: 127.0.0.1
  working_directory: ~/symfony-circleci
  docker:
    - image: circleci/php:7.0-fpm-browsers
#      auth:
#        username: $DOCKER_USER
#        password: $DOCKER_PASS
#    - image: circleci/mysql:5.6
    - image: vouchedfor/main-db-sanitized-prod
#      name: database
      auth:
        username: $DOCKER_USER
        password: $DOCKER_PASS

jobs:
  setup:
    <<: *tests
    parallelism: 1
    steps:
      - checkout

      - run:
          name: Install mysql client
          command: |
            sudo apt-get update
            sudo apt-get install -y mysql-client dnsutils

      - run:
          name: Install php mysql extension
          command: |
            sudo docker-php-ext-install pdo_mysql

      - run:
          name: Run composer self-update
          command: sudo composer self-update

      - restore_cache:
          keys:
            - v1-vendors-{{ checksum "composer.json" }}
            - v1-vendors-

      - run:
          name: Run composer install
          command: composer install -n --prefer-dist

      - save_cache:
          key: composer-v1-{{ checksum "composer.json" }}
          paths:
            - ./vendor

      - run:
          name: Copy parameters.yml
          command: cp .circleci/parameters.yml.dist app/config/parameters.yml

      - run:
          name: Check if symfony is ok
          command: php bin/symfony_requirements

      - run:
          name: Check php modules
          command: php -m

      - run:
          name: Wait for db
          command: dockerize -wait tcp://$DB_HOST:3306 -timeout 1m

      - run:
          name: Check mysql user table
          command: |
            mysql -u root -proot -h 127.0.0.1 --protocol=TCP mysql -e "SELECT User, Host FROM user;"

#      - run:
#          name: Check mysql connection
#          command: |
#            mysql -u $DB_USER -p$DB_PASS -h database -P $DB_PORT --protocol=TCP mysql -e "show tables;"

#      - run:
#          name: See parameters
#          command: cat app/config/parameters.yml

#      - run:
#          name: Grant access to root on docker mysql IP
#          command: |
#            export DB_HOST_IP=$(dig database a +short)
#            mysql -u $DB_USER -p$DB_PASS -h $DB_HOST -P $DB_PORT --protocol=TCP mysql -e "GRANT ALL PRIVILEGES ON *.* TO 'root'@'$DB_HOST_IP' identified by '$DB_PASS';"
#            mysql -u $DB_USER -p$DB_PASS -h $DB_HOST -P $DB_PORT --protocol=TCP mysql -e "GRANT ALL PRIVILEGES ON *.* TO 'root'@'%' identified by '$DB_PASS';"
#            mysql -u $DB_USER -p$DB_PASS -h $DB_HOST -P $DB_PORT --protocol=TCP mysql -e "FLUSH PRIVILEGES;"
#            mysql -u $DB_USER -p$DB_PASS -h $DB_HOST -P $DB_PORT --protocol=TCP mysql -e "SELECT User, Host FROM user;"
#            export DB_HOST=$DB_HOST_IP

#      - run:
#          name: Check mysql connection
#          command: |
#            mysql -u $DB_USER -p$DB_PASS -h $DB_HOST -P $DB_PORT --protocol=TCP mysql -e "show tables;"

      - run:
          name: Create database
          command: php bin/console -n doctrine:database:create

      - run:
          name: Run migrations
          command: php bin/console -n doctrine:migrations:migrate

#      # Persist project data
#      - persist_to_workspace:
#          root: ~/
#          paths:
#            - symfony-circleci
#            - .ssh

workflows:
  version: 2
  build-and-test:
    jobs:
      - setup:
          filters:
            branches:
              only:
                - /.*/
#      - tests:
#          requires:
#            - setup
#          filters:
#            branches:
#              only:
#                - /.*/
#      - build:
#          requires:
#            - tests
#          filters:
#            branches:
#              only:
#                - /master/
